<SfDialog Width="280px" IsModal="true" @bind-Visible="IsVisible" ShowCloseIcon="true">
    <DialogEvents OnOpen="OpenDialog"></DialogEvents>
    <DialogTemplates>
        <Header>@Title Department</Header>
        <Content>
            <EditForm Model="Department" Enhance OnSubmit="Save">
                <div class="card border-success">
                    <div class="card-body">
                        <div class="form-group">
                            <label class="form-label">Id</label>
                            <input @bind="Department.Id" class="form-control" disabled />
                        </div>
                        <div class="form-group">
                            <label class="form-label">Name</label>
                            <InputText @bind-Value="Department.Name" class="form-control" />
                        </div>
                        <div class="form-group mt-3 mb-3">
                            <label class="form-label">Select General Department</label>
                            @if (Department.GeneralDepartment != null)
                            {
                                string selected = Department.GeneralDepartment!.Name!;
                                <SfDropDownList TValue="string"
                                    TItem="GeneralDepartment"
                                    DataSource="@GeneralDepartments"
                                    Placeholder="@selected">
                                    <DropDownListFieldSettings Value="Id" Text="Name"></DropDownListFieldSettings>
                                    <DropDownListEvents TValue="string" TItem="GeneralDepartment" ValueChange="OnValueChange"></DropDownListEvents>
                                </SfDropDownList>
                            }
                            else
                            {
                                <SfDropDownList TValue="string"
                                    TItem="GeneralDepartment"
                                    DataSource="@GeneralDepartments"
                                    Placeholder="Select General Department">
                                    <DropDownListFieldSettings Value="Id" Text="Name"></DropDownListFieldSettings>
                                    <DropDownListEvents TValue="string" TItem="GeneralDepartment" ValueChange="OnValueChange"></DropDownListEvents>
                                </SfDropDownList>
                            }
                        </div>
                    </div>
                    <div class="card-footer">
                        <button class="btn btn-primary float-end" type="submit">Save</button>
                    </div>
                </div>
            </EditForm>
        </Content>
    </DialogTemplates>
</SfDialog>
@code {
    [Parameter]
    public Department Department { get; set; } = new();
    [Parameter]
    public List<GeneralDepartment> GeneralDepartments { get; set; } = new();
    [Parameter]
    public EventCallback<Department> HandleSaveOperationEvent { get; set; }

    private bool IsVisible { get; set; } = false;
    public string Title { get; set; } = "Add";
    private async void Save()
    {
        if (string.IsNullOrEmpty(Department.Name))
            await dialogService.AlertAsync("You need to provide Department name.", "Alert!");
        else
            await HandleSaveOperationEvent.InvokeAsync(Department);
        IsVisible = false;
        StateHasChanged();
    }

    public async Task OpenDialog()
    {
        IsVisible = true;
        await ForceLoadGeneralDepartments();
        StateHasChanged();
    }

    async Task ForceLoadGeneralDepartments() =>
    GeneralDepartments = await generalDepartmentService.GetAll(Constants.GeneralDepartmentUrl);

    public void ChangeTitle(string title)
    {
        Title = title;
    }

    public void OnValueChange(ChangeEventArgs<string, GeneralDepartment> args)
    {
        Department.GeneralDepartmentId = args.Value;
    }
    
}
